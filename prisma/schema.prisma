generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  ok                Boolean @default(false)
  state              String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  p1matches Match[] @relation("p1")
  p2matches Match[] @relation("p2")
  scores   PlayerScore[]
  feedback Feedback[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Match {
    id    String  @id @default(cuid())
    createdAt DateTime
    p1id  String
    p1    User   @relation("p1", fields: [p1id], references: [id])
    p2id  String
    p2    User   @relation("p2", fields: [p2id], references: [id])
    p1score Int
    p2score Int
    gameid String
    game   Game @relation(fields: [gameid], references: [id])
    points Int @default(0)
}

model Game {
    id String   @id @default(cuid())
    slug String
    name String
    icon String?
    officeid String
    office Office @relation(fields: [officeid], references: [id])
    matches Match[] 
    scores PlayerScore[]
}

model Office {
    id String  @id @default(cuid())
    name String
    icon String?
    games Game[]
    slug String @unique @default(uuid())
}

model PlayerScore {
    id String  @id @default(cuid())
    playerid String
    player User @relation(fields: [playerid], references: [id])
    points Int 
    gameid String
    game Game @relation(fields: [gameid], references: [id])

    @@unique([gameid, playerid])
}

model Feedback {
    id String  @id @default(cuid())
    playerid String?
    player User? @relation(fields: [playerid], references: [id])
    text String?
    rating Int
    createdAt DateTime
}